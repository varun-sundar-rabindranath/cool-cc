21
class
21
type
VarList
21
inherits
21
type
IO
21
lbrace
22
identifier
isNil
22
lparen
22
rparen
22
colon
22
type
Bool
22
lbrace
22
true
22
rbrace
22
semi
23
identifier
head
23
lparen
23
rparen
23
colon
23
type
Variable
23
lbrace
23
lbrace
23
identifier
abort
23
lparen
23
rparen
23
semi
23
new
23
type
Variable
23
semi
23
rbrace
23
rbrace
23
semi
24
identifier
tail
24
lparen
24
rparen
24
colon
24
type
VarList
24
lbrace
24
lbrace
24
identifier
abort
24
lparen
24
rparen
24
semi
24
new
24
type
VarList
24
semi
24
rbrace
24
rbrace
24
semi
25
identifier
add
25
lparen
25
identifier
x
25
colon
25
type
Variable
25
rparen
25
colon
25
type
VarList
25
lbrace
25
lparen
25
new
25
type
VarListNE
25
rparen
25
dot
25
identifier
init
25
lparen
25
identifier
x
25
comma
25
identifier
self
25
rparen
25
rbrace
25
semi
26
identifier
print
26
lparen
26
rparen
26
colon
26
type
SELF_TYPE
26
lbrace
26
identifier
out_string
26
lparen
26
string
\n
26
rparen
26
rbrace
26
semi
27
rbrace
27
semi
29
class
29
type
VarListNE
29
inherits
29
type
VarList
29
lbrace
30
identifier
x
30
colon
30
type
Variable
30
semi
31
identifier
rest
31
colon
31
type
VarList
31
semi
32
identifier
isNil
32
lparen
32
rparen
32
colon
32
type
Bool
32
lbrace
32
false
32
rbrace
32
semi
33
identifier
head
33
lparen
33
rparen
33
colon
33
type
Variable
33
lbrace
33
identifier
x
33
rbrace
33
semi
34
identifier
tail
34
lparen
34
rparen
34
colon
34
type
VarList
34
lbrace
34
identifier
rest
34
rbrace
34
semi
35
identifier
init
35
lparen
35
identifier
y
35
colon
35
type
Variable
35
comma
35
identifier
r
35
colon
35
type
VarList
35
rparen
35
colon
35
type
VarListNE
35
lbrace
35
lbrace
35
identifier
x
35
larrow
35
identifier
y
35
semi
35
identifier
rest
35
larrow
35
identifier
r
35
semi
35
identifier
self
35
semi
35
rbrace
35
rbrace
35
semi
36
identifier
print
36
lparen
36
rparen
36
colon
36
type
SELF_TYPE
36
lbrace
36
lbrace
36
identifier
x
36
dot
36
identifier
print_self
36
lparen
36
rparen
36
semi
36
identifier
out_string
36
lparen
36
string
 
36
rparen
36
semi
37
identifier
rest
37
dot
37
identifier
print
37
lparen
37
rparen
37
semi
37
identifier
self
37
semi
37
rbrace
37
rbrace
37
semi
38
rbrace
38
semi
44
class
44
type
LambdaList
44
lbrace
45
identifier
isNil
45
lparen
45
rparen
45
colon
45
type
Bool
45
lbrace
45
true
45
rbrace
45
semi
46
identifier
headE
46
lparen
46
rparen
46
colon
46
type
VarList
46
lbrace
46
lbrace
46
identifier
abort
46
lparen
46
rparen
46
semi
46
new
46
type
VarList
46
semi
46
rbrace
46
rbrace
46
semi
47
identifier
headC
47
lparen
47
rparen
47
colon
47
type
Lambda
47
lbrace
47
lbrace
47
identifier
abort
47
lparen
47
rparen
47
semi
47
new
47
type
Lambda
47
semi
47
rbrace
47
rbrace
47
semi
48
identifier
headN
48
lparen
48
rparen
48
colon
48
type
Int
48
lbrace
48
lbrace
48
identifier
abort
48
lparen
48
rparen
48
semi
48
integer
0
48
semi
48
rbrace
48
rbrace
48
semi
49
identifier
tail
49
lparen
49
rparen
49
colon
49
type
LambdaList
49
lbrace
49
lbrace
49
identifier
abort
49
lparen
49
rparen
49
semi
49
new
49
type
LambdaList
49
semi
49
rbrace
49
rbrace
49
semi
50
identifier
add
50
lparen
50
identifier
e
50
colon
50
type
VarList
50
comma
50
identifier
x
50
colon
50
type
Lambda
50
comma
50
identifier
n
50
colon
50
type
Int
50
rparen
50
colon
50
type
LambdaList
50
lbrace
51
lparen
51
new
51
type
LambdaListNE
51
rparen
51
dot
51
identifier
init
51
lparen
51
identifier
e
51
comma
51
identifier
x
51
comma
51
identifier
n
51
comma
51
identifier
self
51
rparen
52
rbrace
52
semi
53
rbrace
53
semi
55
class
55
type
LambdaListNE
55
inherits
55
type
LambdaList
55
lbrace
56
identifier
lam
56
colon
56
type
Lambda
56
semi
57
identifier
num
57
colon
57
type
Int
57
semi
58
identifier
env
58
colon
58
type
VarList
58
semi
59
identifier
rest
59
colon
59
type
LambdaList
59
semi
60
identifier
isNil
60
lparen
60
rparen
60
colon
60
type
Bool
60
lbrace
60
false
60
rbrace
60
semi
61
identifier
headE
61
lparen
61
rparen
61
colon
61
type
VarList
61
lbrace
61
identifier
env
61
rbrace
61
semi
62
identifier
headC
62
lparen
62
rparen
62
colon
62
type
Lambda
62
lbrace
62
identifier
lam
62
rbrace
62
semi
63
identifier
headN
63
lparen
63
rparen
63
colon
63
type
Int
63
lbrace
63
identifier
num
63
rbrace
63
semi
64
identifier
tail
64
lparen
64
rparen
64
colon
64
type
LambdaList
64
lbrace
64
identifier
rest
64
rbrace
64
semi
65
identifier
init
65
lparen
65
identifier
e
65
colon
65
type
VarList
65
comma
65
identifier
l
65
colon
65
type
Lambda
65
comma
65
identifier
n
65
colon
65
type
Int
65
comma
65
identifier
r
65
colon
65
type
LambdaList
65
rparen
65
colon
65
type
LambdaListNE
65
lbrace
66
lbrace
67
identifier
env
67
larrow
67
identifier
e
67
semi
68
identifier
lam
68
larrow
68
identifier
l
68
semi
69
identifier
num
69
larrow
69
identifier
n
69
semi
70
identifier
rest
70
larrow
70
identifier
r
70
semi
71
identifier
self
71
semi
72
rbrace
73
rbrace
73
semi
74
rbrace
74
semi
76
class
76
type
LambdaListRef
76
lbrace
77
identifier
nextNum
77
colon
77
type
Int
77
larrow
77
integer
0
77
semi
78
identifier
l
78
colon
78
type
LambdaList
78
semi
79
identifier
isNil
79
lparen
79
rparen
79
colon
79
type
Bool
79
lbrace
79
identifier
l
79
dot
79
identifier
isNil
79
lparen
79
rparen
79
rbrace
79
semi
80
identifier
headE
80
lparen
80
rparen
80
colon
80
type
VarList
80
lbrace
80
identifier
l
80
dot
80
identifier
headE
80
lparen
80
rparen
80
rbrace
80
semi
81
identifier
headC
81
lparen
81
rparen
81
colon
81
type
Lambda
81
lbrace
81
identifier
l
81
dot
81
identifier
headC
81
lparen
81
rparen
81
rbrace
81
semi
82
identifier
headN
82
lparen
82
rparen
82
colon
82
type
Int
82
lbrace
82
identifier
l
82
dot
82
identifier
headN
82
lparen
82
rparen
82
rbrace
82
semi
83
identifier
reset
83
lparen
83
rparen
83
colon
83
type
SELF_TYPE
83
lbrace
84
lbrace
85
identifier
nextNum
85
larrow
85
integer
0
85
semi
86
identifier
l
86
larrow
86
new
86
type
LambdaList
86
semi
87
identifier
self
87
semi
88
rbrace
89
rbrace
89
semi
90
identifier
add
90
lparen
90
identifier
env
90
colon
90
type
VarList
90
comma
90
identifier
c
90
colon
90
type
Lambda
90
rparen
90
colon
90
type
Int
90
lbrace
91
lbrace
92
identifier
l
92
larrow
92
identifier
l
92
dot
92
identifier
add
92
lparen
92
identifier
env
92
comma
92
identifier
c
92
comma
92
identifier
nextNum
92
rparen
92
semi
93
identifier
nextNum
93
larrow
93
identifier
nextNum
93
plus
93
integer
1
93
semi
94
identifier
nextNum
94
minus
94
integer
1
94
semi
95
rbrace
96
rbrace
96
semi
97
identifier
removeHead
97
lparen
97
rparen
97
colon
97
type
SELF_TYPE
97
lbrace
98
lbrace
99
identifier
l
99
larrow
99
identifier
l
99
dot
99
identifier
tail
99
lparen
99
rparen
99
semi
100
identifier
self
100
semi
101
rbrace
102
rbrace
102
semi
103
rbrace
103
semi
111
class
111
type
Expr
111
inherits
111
type
IO
111
lbrace
114
identifier
print_self
114
lparen
114
rparen
114
colon
114
type
SELF_TYPE
114
lbrace
115
lbrace
116
identifier
out_string
116
lparen
116
string
\nError: Expr is pure virtual; can't print self\n
116
rparen
116
semi
117
identifier
abort
117
lparen
117
rparen
117
semi
118
identifier
self
118
semi
119
rbrace
120
rbrace
120
semi
123
identifier
beta
123
lparen
123
rparen
123
colon
123
type
Expr
123
lbrace
124
lbrace
125
identifier
out_string
125
lparen
125
string
\nError: Expr is pure virtual; can't beta-reduce\n
125
rparen
125
semi
126
identifier
abort
126
lparen
126
rparen
126
semi
127
identifier
self
127
semi
128
rbrace
129
rbrace
129
semi
132
identifier
substitute
132
lparen
132
identifier
x
132
colon
132
type
Variable
132
comma
132
identifier
e
132
colon
132
type
Expr
132
rparen
132
colon
132
type
Expr
132
lbrace
133
lbrace
134
identifier
out_string
134
lparen
134
string
\nError: Expr is pure virtual; can't substitute\n
134
rparen
134
semi
135
identifier
abort
135
lparen
135
rparen
135
semi
136
identifier
self
136
semi
137
rbrace
138
rbrace
138
semi
141
identifier
gen_code
141
lparen
141
identifier
env
141
colon
141
type
VarList
141
comma
141
identifier
closures
141
colon
141
type
LambdaListRef
141
rparen
141
colon
141
type
SELF_TYPE
141
lbrace
142
lbrace
143
identifier
out_string
143
lparen
143
string
\nError: Expr is pure virtual; can't gen_code\n
143
rparen
143
semi
144
identifier
abort
144
lparen
144
rparen
144
semi
145
identifier
self
145
semi
146
rbrace
147
rbrace
147
semi
148
rbrace
148
semi
153
class
153
type
Variable
153
inherits
153
type
Expr
153
lbrace
154
identifier
name
154
colon
154
type
String
154
semi
156
identifier
init
156
lparen
156
identifier
n
156
colon
156
type
String
156
rparen
156
colon
156
type
Variable
156
lbrace
157
lbrace
158
identifier
name
158
larrow
158
identifier
n
158
semi
159
identifier
self
159
semi
160
rbrace
161
rbrace
161
semi
163
identifier
print_self
163
lparen
163
rparen
163
colon
163
type
SELF_TYPE
163
lbrace
164
identifier
out_string
164
lparen
164
identifier
name
164
rparen
165
rbrace
165
semi
167
identifier
beta
167
lparen
167
rparen
167
colon
167
type
Expr
167
lbrace
167
identifier
self
167
rbrace
167
semi
169
identifier
substitute
169
lparen
169
identifier
x
169
colon
169
type
Variable
169
comma
169
identifier
e
169
colon
169
type
Expr
169
rparen
169
colon
169
type
Expr
169
lbrace
170
if
170
identifier
x
170
equals
170
identifier
self
170
then
170
identifier
e
170
else
170
identifier
self
170
fi
171
rbrace
171
semi
173
identifier
gen_code
173
lparen
173
identifier
env
173
colon
173
type
VarList
173
comma
173
identifier
closures
173
colon
173
type
LambdaListRef
173
rparen
173
colon
173
type
SELF_TYPE
173
lbrace
174
let
174
identifier
cur_env
174
colon
174
type
VarList
174
larrow
174
identifier
env
174
in
175
lbrace
175
while
175
lparen
175
if
175
identifier
cur_env
175
dot
175
identifier
isNil
175
lparen
175
rparen
175
then
176
false
177
else
178
not
178
lparen
178
identifier
cur_env
178
dot
178
identifier
head
178
lparen
178
rparen
178
equals
178
identifier
self
178
rparen
179
fi
179
rparen
179
loop
180
lbrace
180
identifier
out_string
180
lparen
180
string
get_parent().
180
rparen
180
semi
181
identifier
cur_env
181
larrow
181
identifier
cur_env
181
dot
181
identifier
tail
181
lparen
181
rparen
181
semi
182
rbrace
183
pool
183
semi
184
if
184
identifier
cur_env
184
dot
184
identifier
isNil
184
lparen
184
rparen
184
then
185
lbrace
185
identifier
out_string
185
lparen
185
string
Error:  free occurrence of 
185
rparen
185
semi
186
identifier
print_self
186
lparen
186
rparen
186
semi
187
identifier
out_string
187
lparen
187
string
\n
187
rparen
187
semi
188
identifier
abort
188
lparen
188
rparen
188
semi
189
identifier
self
189
semi
190
rbrace
191
else
192
identifier
out_string
192
lparen
192
string
get_x()
192
rparen
193
fi
193
semi
194
rbrace
195
rbrace
195
semi
196
rbrace
196
semi
201
class
201
type
Lambda
201
inherits
201
type
Expr
201
lbrace
202
identifier
arg
202
colon
202
type
Variable
202
semi
203
identifier
body
203
colon
203
type
Expr
203
semi
205
identifier
init
205
lparen
205
identifier
a
205
colon
205
type
Variable
205
comma
205
identifier
b
205
colon
205
type
Expr
205
rparen
205
colon
205
type
Lambda
205
lbrace
206
lbrace
207
identifier
arg
207
larrow
207
identifier
a
207
semi
208
identifier
body
208
larrow
208
identifier
b
208
semi
209
identifier
self
209
semi
210
rbrace
211
rbrace
211
semi
213
identifier
print_self
213
lparen
213
rparen
213
colon
213
type
SELF_TYPE
213
lbrace
214
lbrace
215
identifier
out_string
215
lparen
215
string
\\
215
rparen
215
semi
216
identifier
arg
216
dot
216
identifier
print_self
216
lparen
216
rparen
216
semi
217
identifier
out_string
217
lparen
217
string
.
217
rparen
217
semi
218
identifier
body
218
dot
218
identifier
print_self
218
lparen
218
rparen
218
semi
219
identifier
self
219
semi
220
rbrace
221
rbrace
221
semi
223
identifier
beta
223
lparen
223
rparen
223
colon
223
type
Expr
223
lbrace
223
identifier
self
223
rbrace
223
semi
225
identifier
apply
225
lparen
225
identifier
actual
225
colon
225
type
Expr
225
rparen
225
colon
225
type
Expr
225
lbrace
226
identifier
body
226
dot
226
identifier
substitute
226
lparen
226
identifier
arg
226
comma
226
identifier
actual
226
rparen
227
rbrace
227
semi
230
identifier
substitute
230
lparen
230
identifier
x
230
colon
230
type
Variable
230
comma
230
identifier
e
230
colon
230
type
Expr
230
rparen
230
colon
230
type
Expr
230
lbrace
231
if
231
identifier
x
231
equals
231
identifier
arg
231
then
232
identifier
self
233
else
234
let
234
identifier
new_body
234
colon
234
type
Expr
234
larrow
234
identifier
body
234
dot
234
identifier
substitute
234
lparen
234
identifier
x
234
comma
234
identifier
e
234
rparen
234
comma
235
identifier
new_lam
235
colon
235
type
Lambda
235
larrow
235
new
235
type
Lambda
235
in
236
identifier
new_lam
236
dot
236
identifier
init
236
lparen
236
identifier
arg
236
comma
236
identifier
new_body
236
rparen
237
fi
238
rbrace
238
semi
240
identifier
gen_code
240
lparen
240
identifier
env
240
colon
240
type
VarList
240
comma
240
identifier
closures
240
colon
240
type
LambdaListRef
240
rparen
240
colon
240
type
SELF_TYPE
240
lbrace
241
lbrace
242
identifier
out_string
242
lparen
242
string
((new Closure
242
rparen
242
semi
243
identifier
out_int
243
lparen
243
identifier
closures
243
dot
243
identifier
add
243
lparen
243
identifier
env
243
comma
243
identifier
self
243
rparen
243
rparen
243
semi
244
identifier
out_string
244
lparen
244
string
).init(
244
rparen
244
semi
245
if
245
identifier
env
245
dot
245
identifier
isNil
245
lparen
245
rparen
245
then
246
identifier
out_string
246
lparen
246
string
new Closure))
246
rparen
247
else
248
identifier
out_string
248
lparen
248
string
self))
248
rparen
248
fi
248
semi
249
identifier
self
249
semi
250
rbrace
251
rbrace
251
semi
253
identifier
gen_closure_code
253
lparen
253
identifier
n
253
colon
253
type
Int
253
comma
253
identifier
env
253
colon
253
type
VarList
253
comma
254
identifier
closures
254
colon
254
type
LambdaListRef
254
rparen
254
colon
254
type
SELF_TYPE
254
lbrace
255
lbrace
256
identifier
out_string
256
lparen
256
string
class Closure
256
rparen
256
semi
257
identifier
out_int
257
lparen
257
identifier
n
257
rparen
257
semi
258
identifier
out_string
258
lparen
258
string
 inherits Closure {\n
258
rparen
258
semi
259
identifier
out_string
259
lparen
259
string
  apply(y : EvalObject) : EvalObject {\n
259
rparen
259
semi
260
identifier
out_string
260
lparen
260
string
    { out_string(\"Applying closure 
260
rparen
260
semi
261
identifier
out_int
261
lparen
261
identifier
n
261
rparen
261
semi
262
identifier
out_string
262
lparen
262
string
\\n\");\n
262
rparen
262
semi
263
identifier
out_string
263
lparen
263
string
      x <- y;\n
263
rparen
263
semi
264
identifier
body
264
dot
264
identifier
gen_code
264
lparen
264
identifier
env
264
dot
264
identifier
add
264
lparen
264
identifier
arg
264
rparen
264
comma
264
identifier
closures
264
rparen
264
semi
265
identifier
out_string
265
lparen
265
string
;}};\n
265
rparen
265
semi
266
identifier
out_string
266
lparen
266
string
};\n
266
rparen
266
semi
267
rbrace
268
rbrace
268
semi
269
rbrace
269
semi
274
class
274
type
App
274
inherits
274
type
Expr
274
lbrace
275
identifier
fun
275
colon
275
type
Expr
275
semi
276
identifier
arg
276
colon
276
type
Expr
276
semi
278
identifier
init
278
lparen
278
identifier
f
278
colon
278
type
Expr
278
comma
278
identifier
a
278
colon
278
type
Expr
278
rparen
278
colon
278
type
App
278
lbrace
279
lbrace
280
identifier
fun
280
larrow
280
identifier
f
280
semi
281
identifier
arg
281
larrow
281
identifier
a
281
semi
282
identifier
self
282
semi
283
rbrace
284
rbrace
284
semi
286
identifier
print_self
286
lparen
286
rparen
286
colon
286
type
SELF_TYPE
286
lbrace
287
lbrace
288
identifier
out_string
288
lparen
288
string
((
288
rparen
288
semi
289
identifier
fun
289
dot
289
identifier
print_self
289
lparen
289
rparen
289
semi
290
identifier
out_string
290
lparen
290
string
)@(
290
rparen
290
semi
291
identifier
arg
291
dot
291
identifier
print_self
291
lparen
291
rparen
291
semi
292
identifier
out_string
292
lparen
292
string
))
292
rparen
292
semi
293
identifier
self
293
semi
294
rbrace
295
rbrace
295
semi
297
identifier
beta
297
lparen
297
rparen
297
colon
297
type
Expr
297
lbrace
298
case
298
identifier
fun
298
of
299
identifier
l
299
colon
299
type
Lambda
299
rarrow
299
identifier
l
299
dot
299
identifier
apply
299
lparen
299
identifier
arg
299
rparen
299
semi
300
identifier
e
300
colon
300
type
Expr
300
rarrow
301
let
301
identifier
new_fun
301
colon
301
type
Expr
301
larrow
301
identifier
fun
301
dot
301
identifier
beta
301
lparen
301
rparen
301
comma
302
identifier
new_app
302
colon
302
type
App
302
larrow
302
new
302
type
App
302
in
303
identifier
new_app
303
dot
303
identifier
init
303
lparen
303
identifier
new_fun
303
comma
303
identifier
arg
303
rparen
303
semi
304
esac
305
rbrace
305
semi
307
identifier
substitute
307
lparen
307
identifier
x
307
colon
307
type
Variable
307
comma
307
identifier
e
307
colon
307
type
Expr
307
rparen
307
colon
307
type
Expr
307
lbrace
308
let
308
identifier
new_fun
308
colon
308
type
Expr
308
larrow
308
identifier
fun
308
dot
308
identifier
substitute
308
lparen
308
identifier
x
308
comma
308
identifier
e
308
rparen
308
comma
309
identifier
new_arg
309
colon
309
type
Expr
309
larrow
309
identifier
arg
309
dot
309
identifier
substitute
309
lparen
309
identifier
x
309
comma
309
identifier
e
309
rparen
309
comma
310
identifier
new_app
310
colon
310
type
App
310
larrow
310
new
310
type
App
310
in
311
identifier
new_app
311
dot
311
identifier
init
311
lparen
311
identifier
new_fun
311
comma
311
identifier
new_arg
311
rparen
312
rbrace
312
semi
314
identifier
gen_code
314
lparen
314
identifier
env
314
colon
314
type
VarList
314
comma
314
identifier
closures
314
colon
314
type
LambdaListRef
314
rparen
314
colon
314
type
SELF_TYPE
314
lbrace
315
lbrace
316
identifier
out_string
316
lparen
316
string
(let x : EvalObject <- 
316
rparen
316
semi
317
identifier
fun
317
dot
317
identifier
gen_code
317
lparen
317
identifier
env
317
comma
317
identifier
closures
317
rparen
317
semi
318
identifier
out_string
318
lparen
318
string
,\n
318
rparen
318
semi
319
identifier
out_string
319
lparen
319
string
     y : EvalObject <- 
319
rparen
319
semi
320
identifier
arg
320
dot
320
identifier
gen_code
320
lparen
320
identifier
env
320
comma
320
identifier
closures
320
rparen
320
semi
321
identifier
out_string
321
lparen
321
string
 in\n
321
rparen
321
semi
322
identifier
out_string
322
lparen
322
string
  case x of\n
322
rparen
322
semi
323
identifier
out_string
323
lparen
323
string
    c : Closure => c.apply(y);\n
323
rparen
323
semi
324
identifier
out_string
324
lparen
324
string
    o : Object => { abort(); new EvalObject; };\n
324
rparen
324
semi
325
identifier
out_string
325
lparen
325
string
  esac)
325
rparen
325
semi
326
rbrace
327
rbrace
327
semi
328
rbrace
328
semi
335
class
335
type
Term
335
inherits
335
type
IO
335
lbrace
339
identifier
var
339
lparen
339
identifier
x
339
colon
339
type
String
339
rparen
339
colon
339
type
Variable
339
lbrace
340
let
340
identifier
v
340
colon
340
type
Variable
340
larrow
340
new
340
type
Variable
340
in
341
identifier
v
341
dot
341
identifier
init
341
lparen
341
identifier
x
341
rparen
342
rbrace
342
semi
344
identifier
lam
344
lparen
344
identifier
x
344
colon
344
type
Variable
344
comma
344
identifier
e
344
colon
344
type
Expr
344
rparen
344
colon
344
type
Lambda
344
lbrace
345
let
345
identifier
l
345
colon
345
type
Lambda
345
larrow
345
new
345
type
Lambda
345
in
346
identifier
l
346
dot
346
identifier
init
346
lparen
346
identifier
x
346
comma
346
identifier
e
346
rparen
347
rbrace
347
semi
349
identifier
app
349
lparen
349
identifier
e1
349
colon
349
type
Expr
349
comma
349
identifier
e2
349
colon
349
type
Expr
349
rparen
349
colon
349
type
App
349
lbrace
350
let
350
identifier
a
350
colon
350
type
App
350
larrow
350
new
350
type
App
350
in
351
identifier
a
351
dot
351
identifier
init
351
lparen
351
identifier
e1
351
comma
351
identifier
e2
351
rparen
352
rbrace
352
semi
357
identifier
i
357
lparen
357
rparen
357
colon
357
type
Expr
357
lbrace
358
let
358
identifier
x
358
colon
358
type
Variable
358
larrow
358
identifier
var
358
lparen
358
string
x
358
rparen
358
in
359
identifier
lam
359
lparen
359
identifier
x
359
comma
359
identifier
x
359
rparen
360
rbrace
360
semi
362
identifier
k
362
lparen
362
rparen
362
colon
362
type
Expr
362
lbrace
363
let
363
identifier
x
363
colon
363
type
Variable
363
larrow
363
identifier
var
363
lparen
363
string
x
363
rparen
363
comma
364
identifier
y
364
colon
364
type
Variable
364
larrow
364
identifier
var
364
lparen
364
string
y
364
rparen
364
in
365
identifier
lam
365
lparen
365
identifier
x
365
comma
365
identifier
lam
365
lparen
365
identifier
y
365
comma
365
identifier
x
365
rparen
365
rparen
366
rbrace
366
semi
368
identifier
s
368
lparen
368
rparen
368
colon
368
type
Expr
368
lbrace
369
let
369
identifier
x
369
colon
369
type
Variable
369
larrow
369
identifier
var
369
lparen
369
string
x
369
rparen
369
comma
370
identifier
y
370
colon
370
type
Variable
370
larrow
370
identifier
var
370
lparen
370
string
y
370
rparen
370
comma
371
identifier
z
371
colon
371
type
Variable
371
larrow
371
identifier
var
371
lparen
371
string
z
371
rparen
371
in
372
identifier
lam
372
lparen
372
identifier
x
372
comma
372
identifier
lam
372
lparen
372
identifier
y
372
comma
372
identifier
lam
372
lparen
372
identifier
z
372
comma
372
identifier
app
372
lparen
372
identifier
app
372
lparen
372
identifier
x
372
comma
372
identifier
z
372
rparen
372
comma
372
identifier
app
372
lparen
372
identifier
y
372
comma
372
identifier
z
372
rparen
372
rparen
372
rparen
372
rparen
372
rparen
373
rbrace
373
semi
375
rbrace
375
semi
383
class
383
type
Main
383
inherits
383
type
Term
383
lbrace
385
identifier
beta_reduce
385
lparen
385
identifier
e
385
colon
385
type
Expr
385
rparen
385
colon
385
type
Expr
385
lbrace
386
lbrace
387
identifier
out_string
387
lparen
387
string
beta-reduce: 
387
rparen
387
semi
388
identifier
e
388
dot
388
identifier
print_self
388
lparen
388
rparen
388
semi
389
let
389
identifier
done
389
colon
389
type
Bool
389
larrow
389
false
389
comma
390
identifier
new_expr
390
colon
390
type
Expr
390
in
391
lbrace
392
while
392
lparen
392
not
392
identifier
done
392
rparen
392
loop
393
lbrace
394
identifier
new_expr
394
larrow
394
identifier
e
394
dot
394
identifier
beta
394
lparen
394
rparen
394
semi
395
if
395
lparen
395
identifier
new_expr
395
equals
395
identifier
e
395
rparen
395
then
396
identifier
done
396
larrow
396
true
397
else
398
lbrace
399
identifier
e
399
larrow
399
identifier
new_expr
399
semi
400
identifier
out_string
400
lparen
400
string
 =>\n
400
rparen
400
semi
401
identifier
e
401
dot
401
identifier
print_self
401
lparen
401
rparen
401
semi
402
rbrace
403
fi
403
semi
404
rbrace
405
pool
405
semi
406
identifier
out_string
406
lparen
406
string
\n
406
rparen
406
semi
407
identifier
e
407
semi
408
rbrace
408
semi
409
rbrace
410
rbrace
410
semi
412
identifier
eval_class
412
lparen
412
rparen
412
colon
412
type
SELF_TYPE
412
lbrace
413
lbrace
414
identifier
out_string
414
lparen
414
string
class EvalObject inherits IO {\n
414
rparen
414
semi
415
identifier
out_string
415
lparen
415
string
  eval() : EvalObject { { abort(); self; } };\n
415
rparen
415
semi
416
identifier
out_string
416
lparen
416
string
};\n
416
rparen
416
semi
417
rbrace
418
rbrace
418
semi
420
identifier
closure_class
420
lparen
420
rparen
420
colon
420
type
SELF_TYPE
420
lbrace
421
lbrace
422
identifier
out_string
422
lparen
422
string
class Closure inherits EvalObject {\n
422
rparen
422
semi
423
identifier
out_string
423
lparen
423
string
  parent : Closure;\n
423
rparen
423
semi
424
identifier
out_string
424
lparen
424
string
  x : EvalObject;\n
424
rparen
424
semi
425
identifier
out_string
425
lparen
425
string
  get_parent() : Closure { parent };\n
425
rparen
425
semi
426
identifier
out_string
426
lparen
426
string
  get_x() : EvalObject { x };\n
426
rparen
426
semi
427
identifier
out_string
427
lparen
427
string
  init(p : Closure) : Closure {{ parent <- p; self; }};\n
427
rparen
427
semi
428
identifier
out_string
428
lparen
428
string
  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n
428
rparen
428
semi
429
identifier
out_string
429
lparen
429
string
};\n
429
rparen
429
semi
430
rbrace
431
rbrace
431
semi
433
identifier
gen_code
433
lparen
433
identifier
e
433
colon
433
type
Expr
433
rparen
433
colon
433
type
SELF_TYPE
433
lbrace
434
let
434
identifier
cl
434
colon
434
type
LambdaListRef
434
larrow
434
lparen
434
new
434
type
LambdaListRef
434
rparen
434
dot
434
identifier
reset
434
lparen
434
rparen
434
in
435
lbrace
436
identifier
out_string
436
lparen
436
string
Generating code for 
436
rparen
436
semi
437
identifier
e
437
dot
437
identifier
print_self
437
lparen
437
rparen
437
semi
438
identifier
out_string
438
lparen
438
string
\n------------------cut here------------------\n
438
rparen
438
semi
439
identifier
out_string
439
lparen
439
string
(*Generated by lam.cl (Jeff Foster, March 2000)*)\n
439
rparen
439
semi
440
identifier
eval_class
440
lparen
440
rparen
440
semi
441
identifier
closure_class
441
lparen
441
rparen
441
semi
442
identifier
out_string
442
lparen
442
string
class Main {\n
442
rparen
442
semi
443
identifier
out_string
443
lparen
443
string
  main() : EvalObject {\n
443
rparen
443
semi
444
identifier
e
444
dot
444
identifier
gen_code
444
lparen
444
new
444
type
VarList
444
comma
444
identifier
cl
444
rparen
444
semi
445
identifier
out_string
445
lparen
445
string
\n};\n};\n
445
rparen
445
semi
446
while
446
lparen
446
not
446
lparen
446
identifier
cl
446
dot
446
identifier
isNil
446
lparen
446
rparen
446
rparen
446
rparen
446
loop
447
let
447
identifier
e
447
colon
447
type
VarList
447
larrow
447
identifier
cl
447
dot
447
identifier
headE
447
lparen
447
rparen
447
comma
448
identifier
c
448
colon
448
type
Lambda
448
larrow
448
identifier
cl
448
dot
448
identifier
headC
448
lparen
448
rparen
448
comma
449
identifier
n
449
colon
449
type
Int
449
larrow
449
identifier
cl
449
dot
449
identifier
headN
449
lparen
449
rparen
449
in
450
lbrace
451
identifier
cl
451
dot
451
identifier
removeHead
451
lparen
451
rparen
451
semi
452
identifier
c
452
dot
452
identifier
gen_closure_code
452
lparen
452
identifier
n
452
comma
452
identifier
e
452
comma
452
identifier
cl
452
rparen
452
semi
453
rbrace
454
pool
454
semi
455
identifier
out_string
455
lparen
455
string
\n------------------cut here------------------\n
455
rparen
455
semi
456
rbrace
457
rbrace
457
semi
459
identifier
main
459
lparen
459
rparen
459
colon
459
type
Int
459
lbrace
460
lbrace
461
identifier
i
461
lparen
461
rparen
461
dot
461
identifier
print_self
461
lparen
461
rparen
461
semi
462
identifier
out_string
462
lparen
462
string
\n
462
rparen
462
semi
463
identifier
k
463
lparen
463
rparen
463
dot
463
identifier
print_self
463
lparen
463
rparen
463
semi
464
identifier
out_string
464
lparen
464
string
\n
464
rparen
464
semi
465
identifier
s
465
lparen
465
rparen
465
dot
465
identifier
print_self
465
lparen
465
rparen
465
semi
466
identifier
out_string
466
lparen
466
string
\n
466
rparen
466
semi
467
identifier
beta_reduce
467
lparen
467
identifier
app
467
lparen
467
identifier
app
467
lparen
467
identifier
app
467
lparen
467
identifier
s
467
lparen
467
rparen
467
comma
467
identifier
k
467
lparen
467
rparen
467
rparen
467
comma
467
identifier
i
467
lparen
467
rparen
467
rparen
467
comma
467
identifier
i
467
lparen
467
rparen
467
rparen
467
rparen
467
semi
468
identifier
beta_reduce
468
lparen
468
identifier
app
468
lparen
468
identifier
app
468
lparen
468
identifier
k
468
lparen
468
rparen
468
comma
468
identifier
i
468
lparen
468
rparen
468
rparen
468
comma
468
identifier
i
468
lparen
468
rparen
468
rparen
468
rparen
468
semi
469
identifier
gen_code
469
lparen
469
identifier
app
469
lparen
469
identifier
i
469
lparen
469
rparen
469
comma
469
identifier
i
469
lparen
469
rparen
469
rparen
469
rparen
469
semi
470
identifier
gen_code
470
lparen
470
identifier
app
470
lparen
470
identifier
app
470
lparen
470
identifier
app
470
lparen
470
identifier
s
470
lparen
470
rparen
470
comma
470
identifier
k
470
lparen
470
rparen
470
rparen
470
comma
470
identifier
i
470
lparen
470
rparen
470
rparen
470
comma
470
identifier
i
470
lparen
470
rparen
470
rparen
470
rparen
470
semi
471
identifier
gen_code
471
lparen
471
identifier
app
471
lparen
471
identifier
app
471
lparen
471
identifier
app
471
lparen
471
identifier
app
471
lparen
471
identifier
app
471
lparen
471
identifier
app
471
lparen
471
identifier
app
471
lparen
471
identifier
app
471
lparen
471
identifier
i
471
lparen
471
rparen
471
comma
471
identifier
k
471
lparen
471
rparen
471
rparen
471
comma
471
identifier
s
471
lparen
471
rparen
471
rparen
471
comma
471
identifier
s
471
lparen
471
rparen
471
rparen
471
comma
472
identifier
k
472
lparen
472
rparen
472
rparen
472
comma
472
identifier
s
472
lparen
472
rparen
472
rparen
472
comma
472
identifier
i
472
lparen
472
rparen
472
rparen
472
comma
472
identifier
k
472
lparen
472
rparen
472
rparen
472
comma
472
identifier
i
472
lparen
472
rparen
472
rparen
472
rparen
472
semi
473
identifier
gen_code
473
lparen
473
identifier
app
473
lparen
473
identifier
app
473
lparen
473
identifier
i
473
lparen
473
rparen
473
comma
473
identifier
app
473
lparen
473
identifier
k
473
lparen
473
rparen
473
comma
473
identifier
s
473
lparen
473
rparen
473
rparen
473
rparen
473
comma
473
identifier
app
473
lparen
473
identifier
k
473
lparen
473
rparen
473
comma
473
identifier
app
473
lparen
473
identifier
s
473
lparen
473
rparen
473
comma
473
identifier
s
473
lparen
473
rparen
473
rparen
473
rparen
473
rparen
473
rparen
473
semi
474
integer
0
474
semi
475
rbrace
476
rbrace
476
semi
477
rbrace
477
semi
